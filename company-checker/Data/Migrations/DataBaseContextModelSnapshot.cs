// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("Data.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("HasVirtualAccounts")
                        .HasColumnType("bit");

                    b.Property<string>("Krs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDenialBasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDenialDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationLegalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Regon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemovalBasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestorationBasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RestorationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusVat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Data.Entities.Representative", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Representative");
                });

            modelBuilder.Entity("Data.Entities.BankAccount", b =>
                {
                    b.HasOne("Data.Entities.Company", null)
                        .WithMany("AccountNumbers")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("Data.Entities.Representative", b =>
                {
                    b.HasOne("Data.Entities.Company", null)
                        .WithMany("Representatives")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("Data.Entities.Company", b =>
                {
                    b.Navigation("AccountNumbers");

                    b.Navigation("Representatives");
                });
#pragma warning restore 612, 618
        }
    }
}
